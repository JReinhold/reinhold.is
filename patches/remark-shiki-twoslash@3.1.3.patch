diff --git a/dist/remark-shiki-twoslash.esm.js b/dist/remark-shiki-twoslash.esm.js
index 7d005c0ae14fff368e1808ffae3ecef5dab756b9..1b216f24f798507b8c1818695b8f0eb5ed0f72c1 100644
--- a/dist/remark-shiki-twoslash.esm.js
+++ b/dist/remark-shiki-twoslash.esm.js
@@ -797,62 +797,8 @@ var cachedTwoslashCall = function cachedTwoslashCall(code, lang, settings) {
   var isWebWorker = typeof self !== "undefined" && typeof self.WorkerGlobalScope !== "undefined";
   var isBrowser = isWebWorker || typeof window !== "undefined" && typeof window.document !== "undefined" && typeof fetch !== "undefined";
 
-  if (isBrowser) {
-    // Not in Node, run un-cached
-    return runTwoSlash(code, lang, settings);
-  }
-
-  var _require = require("crypto"),
-      createHash = _require.createHash;
-
-  var _require2 = require("fs"),
-      readFileSync = _require2.readFileSync,
-      existsSync = _require2.existsSync,
-      mkdirSync = _require2.mkdirSync,
-      writeFileSync = _require2.writeFileSync;
-
-  var _require3 = require("path"),
-      join = _require3.join;
-
-  var shikiVersion = require('@typescript/twoslash/package.json').version;
-
-  var tsVersion = require('typescript/package.json').version;
-
-  var shasum = createHash("sha1");
-  var codeSha = shasum.update(code + "-" + shikiVersion + "-" + tsVersion).digest("hex");
-
-  var getNmCache = function getNmCache() {
-    if (__dirname.includes("node_modules")) {
-      return join(__dirname.split("node_modules")[0], "node_modules", ".cache", "twoslash");
-    } else {
-      return join(__dirname, "..", "..", ".cache", "twoslash");
-    }
-  };
-
-  var getPnpCache = function getPnpCache() {
-    try {
-      var pnp = require("pnpapi");
-
-      return join(pnp.getPackageInformation(pnp.topLevel).packageLocation, "node_modules", ".cache", "twoslash");
-    } catch (error) {
-      return getNmCache();
-    }
-  };
-
-  var cacheRoot = process.versions.pnp ? getPnpCache() : getNmCache();
-  var cachePath = join(cacheRoot, codeSha + ".json");
-
-  if (existsSync(cachePath)) {
-    if (process.env.debug) console.log("Using cached twoslash results from " + cachePath);
-    return JSON.parse(readFileSync(cachePath, "utf8"));
-  } else {
-    var results = runTwoSlash(code, lang, settings);
-    if (!existsSync(cacheRoot)) mkdirSync(cacheRoot, {
-      recursive: true
-    });
-    writeFileSync(cachePath, JSON.stringify(results), "utf8");
-    return results;
-  }
+  // Not in Node, run un-cached
+  return runTwoSlash(code, lang, settings);
 };
 
 var addIncludes = function addIncludes(map, name, code) {